{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesArray","Math","ceil","className","classNames","disabled","href","onClick","map","page","active","length","PER_PAGE_OPTIONS","items","App","useState","setPerPage","setCurrentPage","startItem","endItem","min","currentItems","slice","id","onChange","event","target","value","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCMIG,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAaX,EAAW,EADRY,KAAKC,KAAKN,EAAQC,IAGxC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACLC,QAAS,kBAAsB,IAAhBT,GAAqBC,EAAaD,EAAc,IAC/D,gBAA+B,IAAhBA,EALjB,oBAUDE,EAAWQ,KAAI,SAACC,GAAD,OACd,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASX,IAFrB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUP,IAAgBE,EAAWW,SAFzC,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACLC,QAAS,kBAAMT,IAAgBE,EAAWW,QACrCZ,EAAaD,EAAc,IAChC,gBAAeA,IAAgBE,EAAWW,OAN5C,wBCtDFC,EAAmB,CAAC,EAAG,EAAG,GAAI,IAE9BC,EAAQxB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KAEMC,GAAapB,EAAc,GAAKD,EAAU,EAC1CsB,EAAUlB,KAAKmB,IAAItB,EAAcD,EAX3B,IAaNwB,EAAeR,EAAMS,MAAMJ,EAAY,EAAGC,GAOhD,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCoB,EADjC,cACgDC,EADhD,aAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,SAnBW,SAACC,GACpBT,GAAYS,EAAMC,OAAOC,OACzBV,EAAe,IAkBPU,MAAO9B,EALT,SAOGe,EAAiBJ,KAAI,SAAAoB,GAAM,OAC1B,wBACED,MAAOC,EADT,SAIGA,GAFIA,UAQb,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEP,MArDM,GAsDNC,QAASA,EACTC,YAAaA,EACbC,aAAckB,IAEhB,6BACGI,EAAab,KAAI,SAACsB,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC/DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.edc28733.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\n\nimport classNames from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pagesArray = getNumbers(1, numberOfPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          onClick={() => currentPage !== 1 && onPageChange(currentPage - 1)}\n          aria-disabled={currentPage === 1}\n        >\n          «\n        </a>\n      </li>\n      {pagesArray.map((page) => (\n        <li\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === pagesArray.length,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          onClick={() => currentPage !== pagesArray.length\n            && onPageChange(currentPage + 1)}\n          aria-disabled={currentPage === pagesArray.length}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst TOTAL = 42;\nconst PER_PAGE_OPTIONS = [3, 5, 10, 20];\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startItem = (currentPage - 1) * perPage + 1;\n  const endItem = Math.min(currentPage * perPage, TOTAL);\n\n  const currentItems = items.slice(startItem - 1, endItem);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n            value={perPage}\n          >\n            {PER_PAGE_OPTIONS.map(option => (\n              <option\n                value={option}\n                key={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={TOTAL}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {currentItems.map((item) => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}